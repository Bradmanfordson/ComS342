#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 182 182 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 43 207 41 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 43 207 41 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1 1 1 32 32 219 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1 1 1 32 32 219 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 163 173 51 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 163 173 51 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 166 222 166 0 0 0 -1
-1 2 35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 166 222 166 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 57 193 172 0 0 0 -1
-1 2 39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 57 193 172 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 135 140 226 0 0 0 -1
-1 2 31 #"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 135 140 226 0 0 0 -1
-1 2 47 #"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 2181 0 31 3 12 #"#lang racket"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 14 3 12 #"racket/trace"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 18 3 24 #";(require \"program.rkt\")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 7 #"provide"
0 0 27 3 2 #" ("
0 0 14 3 15 #"all-defined-out"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 80
(
 #"#|------------------------------- Helpers --------------------------"
 #"----------|#"
) 0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 3 #"lst"
0 0 27 3 4 #")  ("
0 0 14 3 3 #"car"
0 0 27 3 1 #" "
0 0 14 3 3 #"lst"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 3 #"lst"
0 0 27 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 27 3 1 #" "
0 0 14 3 3 #"lst"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 1 #" "
0 0 14 3 3 #"lst"
0 0 27 3 4 #")  ("
0 0 14 3 6 #"second"
0 0 27 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 27 3 1 #" "
0 0 14 3 3 #"lst"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 18 3 80
(
 #"#|------------------------------------------------------------------"
 #"----------|#"
) 0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 4 #"test"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 2 #") "
0 0 14 3 4 #"true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 10 #")         "
0 0 18 3 24 #"; Is the program a list?"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 2 #") "
0 0 24 3 1 #"1"
0 0 27 3 3 #")) "
0 0 18 3 49 #"; Does the program list have more than 1 element?"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 18 3 10 #"#| THEN |#"
0 0 27 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"car"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 18 3 10 #"#| ELSE |#"
0 0 27 3 2 #" ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"car"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 7 #"))     "
0 0 18 3 55 #"; Is the first element in the program list also a list?"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 5 #"list?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 7 #")))    "
0 0 18 3 36 #"; Is the rest of the program a list?"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 10 #"#| THEN |#"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"car"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 4 #"test"
0 0 27 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 27 3 1 #" "
0 0 14 3 7 #"program"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 10 #"#| ELSE |#"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 18 #"                 )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 5 #"decl?"
0 0 27 3 4 #"    "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 7 #"assign?"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 8 #"op_expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 3 #"if?"
0 0 27 3 6 #"      "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 6 #"while?"
0 0 27 3 3 #"   "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 3 #"if?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #")   "
0 0 24 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 2 #"if"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 6 #")    )"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"synchk"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 7 #")    ))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 6 #"while?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 7 #")      "
0 0 24 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 5 #"while"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 9 #")       )"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"synchk"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 10 #")       ))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 10 #"#| Decl |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 5 #"decl?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 3 #"  ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 6 #")     "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 4 #"decl"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 9 #")      ))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 1 #"#"
0 0 18 3 11 #"| Assign |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 7 #"assign?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 7 #"      ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 8 #")       "
0 0 24 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 7 #"      ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 6 #"assign"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 7 #"symbol?"
0 0 27 3 6 #"     ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 10 #")        )"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 11 #"arith_expr?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 11 #")        ))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 8 #"#| Op |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"arith_op?"
0 0 27 3 1 #" "
0 0 14 3 2 #"el"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 2 #"el"
0 0 27 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"+"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 2 #"el"
0 0 27 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"-"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 2 #"el"
0 0 27 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"*"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 2 #"el"
0 0 27 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"/"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"op_expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 11 #"arith_expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 10 #"cond_expr?"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 15 #"#| ArithExpr |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 11 #"arith_expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 7 #"symbol?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #"("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 9 #"arith_op?"
0 0 27 3 4 #"   ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 11 #"arith_expr?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 11 #"arith_expr?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 14 #"#| CondExpr |#"
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"cond_expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 6 #"bcond?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 4 #")  )"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 5 #"expr?"
0 0 27 3 3 #"  ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #")  )"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 5 #"expr?"
0 0 27 3 3 #"  ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 6 #")  )))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"ccond?old"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 3 #"and"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 2 #"or"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 3 #"not"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 6 #"ccond?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 5 #"false"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"bcond?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 14 3 4 #"true"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 3 #"not"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 8 #")     ))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 18 #"                  "
0 0 14 3 5 #"false"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")  "
0 0 24 3 1 #"`"
0 0 14 3 2 #"or"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 7 #")     )"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 8 #")     ))"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 3 #"and"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 7 #")     )"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 6 #"ccond?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 8 #")     ))"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      )"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                  )"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              )"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          )"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 14 #"#| BoolCond |#"
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 6 #"bcond?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 5 #"false"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 2 #"gt"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 2 #"lt"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 2 #"eq"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 14 3 5 #"false"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") )"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 27 3 4 #") ))"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          )"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 40 #"#|  stuff (dont think this is needed) |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"func_expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 3 #"fun"
0 0 27 3 2 #") "
0 0 18 3 37 #"; may need to change 'fun to 'program"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 12 #"func_assign?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") ("
0 0 14 3 6 #"append"
0 0 27 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") ("
0 0 14 3 6 #"append"
0 0 27 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 12 #"func_assign?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")) "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 14 #"formal_params?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") )"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 51 #"#| Formal parameters (Dont think this is needed) |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"formal_params?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 16 #"))              "
0 0 14 3 5 #"false"
0 0 27 3 2 #" ]"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 5 #"null?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 21 #")                    "
0 0 14 3 4 #"true"
0 0 27 3 3 #"  ]"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 18 #"formal_param_list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 8 #")       "
0 0 14 3 4 #"true"
0 0 27 3 3 #"  ]"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 18 #"formal_param_list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")) "
0 0 14 3 5 #"false"
0 0 27 3 2 #" ]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 18 #"formal_param_list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #")) ("
0 0 14 3 18 #"formal_param_list?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 11 #"apply_func?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")) "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 5 #"apply"
0 0 27 3 2 #") "
0 0 18 3 25 #"; may need to rename this"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 5 #"args?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #")) )"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 6 #"match?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") )"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 31 #"#|  args (prolly not needed) |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 5 #"args?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 16 #"))              "
0 0 14 3 5 #"false"
0 0 27 3 2 #" ]"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 5 #"null?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 21 #")                    "
0 0 14 3 4 #"true"
0 0 27 3 3 #"  ]"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 9 #"arg_list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 9 #" )       "
0 0 14 3 4 #"true"
0 0 27 3 4 #"  ] "
0 0 27 29 1 #"\n"
0 0 27 3 7 #"    [ ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 9 #"arg_list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #" )) "
0 0 14 3 5 #"false"
0 0 27 3 3 #" ])"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 6 #"match?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 5 #"false"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") ("
0 0 14 3 5 #"first"
0 0 27 3 3 #" ))"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 5 #" ))))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 14 3 4 #"true"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 14 3 6 #"match?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cddr"
0 0 27 3 3 #" ))"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          )"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"arg_list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") )"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") )"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 9 #"arg_list?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 5 #") )))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 9 #"#| Var |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"var_expr?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 3 #"var"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 13 #"var_assigned?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #") )"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"third"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #") ))"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 13 #"var_assigned?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #" )))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 13 #"var_assigned?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 5 #"false"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 17 #"var_assigned_seq?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #" ))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 15 #"#| Sequences |#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 17 #"var_assigned_seq?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 5 #"false"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 14 3 4 #"true"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"car"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #") "
0 0 24 3 1 #"`"
0 0 14 3 5 #"apply"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #") ))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")) "
0 0 24 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 7 #"symbol?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 5 #"expr?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #")) )"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 17 #"var_assigned_seq?"
0 0 27 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 27 3 1 #" "
0 0 14 3 4 #"expr"
0 0 27 3 4 #") ))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              )"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          )"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      )"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 80
(
 #"#|------------------------------- Traces n Tests--------------------"
 #"----------|#"
) 0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 17 #"; TEST for SYNCHK"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 20 3 17 #"\"synchk_test.rkt\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 5 #"trace"
0 0 18 3 1 #" "
0 0 18 3 7 #"synchk)"
0 0 27 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 5 #"trace"
0 0 18 3 1 #" "
0 0 18 3 5 #"test)"
0 0 27 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 5 #"trace"
0 0 18 3 1 #" "
0 0 18 3 6 #"expr?)"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 7 #"display"
0 0 27 3 1 #" "
0 0 20 3 42 #"\"\\n ---------- SYNCHK TESTS ---------- \\n\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"3"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 7 #"display"
0 0 27 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 6 #"\\nDecl"
0 0 20 3 7 #" Test\\n"
0 0 20 3 1 #"\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"4"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"5"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"6"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 7 #"display"
0 0 27 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 8 #"\\nAssign"
0 0 20 3 7 #" Test\\n"
0 0 20 3 1 #"\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"7"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"8"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 1 #"9"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 8 #"program9"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"10"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program10"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"11"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program11"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"12"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program12"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"13"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program13"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"14"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program14"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"15"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program15"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"16"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program16"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"17"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program17"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 7 #"display"
0 0 27 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 4 #"\\nIF"
0 0 20 3 7 #" Test\\n"
0 0 20 3 1 #"\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"18"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program18"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"19"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program19"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"20"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program20"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"21"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program21"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"22"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program22"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"23"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program23"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"24"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program24"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"25"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program25"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 7 #"display"
0 0 27 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 7 #"\\nWhile"
0 0 20 3 1 #" "
0 0 20 3 7 #"Test\\n\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"26"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program26"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"27"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program27"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"28"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program28"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"29"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program29"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"30"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program30"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"31"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program31"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"32"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program32"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 24 3 2 #"33"
0 0 27 3 2 #")("
0 0 14 3 5 #"print"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #")("
0 0 14 3 6 #"synchk"
0 0 27 3 1 #" "
0 0 14 3 9 #"program33"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 80
(
 #"#|------------------------------------------------------------------"
 #"----------|#"
) 0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0           0
